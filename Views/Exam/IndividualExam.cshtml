@model Lethal.Developer.ViewModels.QuestionViewModel


@{
    ViewData["Title"] = "InvidualExam";

    int carrouselIndex = 1;
}

<h1 class="page-header">@Model.Questions.Count() Exam Questions for <span class="btc-color">@Model.TopicName</span></h1>

<div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
    <div class="carousel-inner">
        <div class="carousel-item active">
            <div class="flip-card">
                <div class="flip-card-inner rotatecard-0">
                    <div class="flip-card-front">
                        <div>@Model.Questions.FirstOrDefault().Q</div>
                        <button onclick="qAnswered(0)" class="btn-lg btn-warning">Grade Answer</button>
                    </div>
                    <div class="flip-card-back">
                        <div>@Model.Questions.FirstOrDefault().A</div>
                        <hr class="sidebar-divider">
                        <h5>Grade your answer 1-5</h5>
                        <div class="centered-flex">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resultRadio-0" id="resultRadio1" value="1" checked>
                                <label class="form-check-label" for="resultRadio1">
                                    1
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resultRadio-0" id="resultRadio2" value="2">
                                <label class="form-check-label" for="resultRadio2">
                                    2
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resultRadio-0" id="resultRadio3" value="3">
                                <label class="form-check-label" for="resultRadio2">
                                    3
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resultRadio-0" id="resultRadio4" value="4">
                                <label class="form-check-label" for="resultRadio2">
                                    4
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resultRadio-0" id="resultRadio5" value="5">
                                <label class="form-check-label" for="resultRadio2">
                                    5
                                </label>
                            </div>
                        </div>

                        <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                            <button onclick="storeResult('resultRadio-0')">next question></button>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        @foreach (var q in Model.Questions.Skip(1))
        {
            <div class="carousel-item">
                <div class="flip-card">
                    <div class="flip-card-inner rotatecard-@carrouselIndex">
                        <div class="flip-card-front">
                            <div>@q.Q</div>
                            <button onclick="qAnswered(@carrouselIndex)" class="btn-lg btn-warning">Grade Answer</button>
                        </div>
                        <div class="flip-card-back">
                            <div>@q.A</div>
                            <hr class="sidebar-divider">
                            <h5>Grade your answer 1-5</h5>
                            <div class="centered-flex">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="resultRadio-@carrouselIndex" id="resultRadio1" value="1" checked>
                                    <label class="form-check-label" for="resultRadio1">
                                        1
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="resultRadio-@carrouselIndex" id="resultRadio2" value="2">
                                    <label class="form-check-label" for="resultRadio2">
                                        2
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="resultRadio-@carrouselIndex" id="resultRadio3" value="3">
                                    <label class="form-check-label" for="resultRadio2">
                                        3
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="resultRadio-@carrouselIndex" id="resultRadio4" value="4">
                                    <label class="form-check-label" for="resultRadio2">
                                        4
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="resultRadio-@carrouselIndex" id="resultRadio5" value="5">
                                    <label class="form-check-label" for="resultRadio2">
                                        5
                                    </label>
                                </div>
                            </div>
                            
                            @if (carrouselIndex == Model.Questions.Count() - 1)
                            {
                                <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                                    <div>this is the final question</div>
                                    <button onclick="saveResult('resultRadio-@carrouselIndex', @Model.Questions.Count())">Submit Results</button>
                                    <span class="sr-only">Next</span>
                                </a>
                            }
                            else
                            {
                                <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                                    <button onclick="storeResult('resultRadio-@carrouselIndex')">Next Question></button>
                                    <span class="sr-only">Next</span>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>

            carrouselIndex++;
        }

        <div class="carousel-item last">
            <div>Your average score for this exam is:</div>
            <button>Cancel</button>
        </div>

    </div>
    @*<a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
        <button onclick="storeResult()">next question></button>
        <span class="sr-only">Next</span>
    </a>*@
</div>


<style>
    /* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
    .flip-card {
        background-color: transparent;
        width: 100vw;
        height: 100vh;
        border: 1px solid #f1f1f1;
        perspective: 1000px; /* Remove this if you don't want the 3D effect */
    }

    /* This container is needed to position the front and back side */
    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.8s;
        transform-style: preserve-3d;
    }

    /* Position the front and back side */
    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        -webkit-backface-visibility: hidden; /* Safari */
        backface-visibility: hidden;
    }

    /* Style the front side (fallback if image is missing) */
    .flip-card-front {
        background-color: #111;
        color: black;
    }

    /* Style the back side */
    .flip-card-back {
        background-color: #111;
        color: white;
        transform: rotateY(180deg);
    }
</style>

<script>
    function qAnswered(index) {
        var currentClass = `rotatecard-${index}`

        document.getElementsByClassName(currentClass)[0].style.transform = 'rotateY(180deg)';
    }

    var resultArray = [];
    function storeResult(radioClass) {
        let radios = document.getElementsByName(radioClass);

        for (var i = 0, length = radios.length; i < length; i++) {
            if (radios[i].checked) {
                resultArray.push(parseInt(radios[i].value));
                break;
            }
        }

        console.log(resultArray);
    }

    function saveResult(radioClass, count) {
        let lastRadios = document.getElementsByName(radioClass);
        for (var i = 0, length = lastRadios.length; i < length; i++) {
            if (lastRadios[i].checked) {
                resultArray.push(parseInt(lastRadios[i].value));
                break;
            }
        }

        let sum = 0;
        resultArray.forEach(r => sum += r);

        var average = (sum).toFixed(3) / (count).toFixed(3);



        console.log(average);

    }

    $(document).ready(function () {
        $('.carousel').carousel({
            interval: false,
            wrap: false
        })
    });


</script>